files_vect <- files_df %>%
filter(ccode %in% ccode_param | leadid %in% leadid_param) %>%
select(file_name)
#DEFAULT BEHAVIOR (ccode, leadid, facet=FALSE, all_in_one=FALSE)
files_list <- deframe(files_vect)
for (file in files_list) {
leader_name <- str_match(file,"(.*(?=_resolved))")[,2]
caps_name <- toupper(leader_name)
leader_entity_sentiment <- get(paste0(leader_name, '_entity_sentiment')) %>%
pivot_wider(names_from="leader_sentence_dummy",
values_from=c("ave_sentiment",
"sd",
"word_count")) %>%
rename(other_sentiment = ave_sentiment_OTHER,
paste0(leader_name, '_sentiment') = paste0('ave_sentiment_', caps_name))
print(leader_entity_sentiment)
crf <- ggplot(data=leader_entity_sentiment,
aes(x=other_sentiment, y=paste0(leader_name, '_sentiment'))+
geom_point(alpha=0.5))+
geom_abline(intercept=0, slope=1, size=1, color="black")+
geom_smooth(method='lm')+
theme_minimal()
assign(paste0(leader_name, '_corel_fig'), crf, envir = .GlobalEnv)
}
}
clear
cl
cs
#Generating leader-other sentiment correlation plots
batch_corel_figures <- function(ccode_param, leadid_param, facet_param, all_in_one_param) {
files_vect <- files_df %>%
filter(ccode %in% ccode_param | leadid %in% leadid_param) %>%
select(file_name)
#DEFAULT BEHAVIOR (ccode, leadid, facet=FALSE, all_in_one=FALSE)
files_list <- deframe(files_vect)
for (file in files_list) {
leader_name <- str_match(file,"(.*(?=_resolved))")[,2]
caps_name <- toupper(leader_name)
leader_entity_sentiment <- get(paste0(leader_name, '_entity_sentiment')) %>%
pivot_wider(names_from="leader_sentence_dummy",
values_from=c("ave_sentiment",
"sd",
"word_count")) %>%
rename(other_sentiment = ave_sentiment_OTHER,
paste0(leader_name, '_sentiment') = paste0('ave_sentiment_', caps_name))
print(leader_entity_sentiment)
crf <- ggplot(data=leader_entity_sentiment,
aes(x=other_sentiment, y=paste0(leader_name, '_sentiment'))+
geom_point(alpha=0.5))+
geom_abline(intercept=0, slope=1, size=1, color="black")+
geom_smooth(method='lm')+
theme_minimal()
assign(paste0(leader_name, '_corel_fig'), crf, envir = .GlobalEnv)
}
}
#Generating leader-other sentiment correlation plots
batch_corel_figures <- function(ccode_param, leadid_param, facet_param, all_in_one_param) {
files_vect <- files_df %>%
filter(ccode %in% ccode_param | leadid %in% leadid_param) %>%
select(file_name)
#DEFAULT BEHAVIOR (ccode, leadid, facet=FALSE, all_in_one=FALSE)
files_list <- deframe(files_vect)
for (file in files_list) {
leader_name <- str_match(file,"(.*(?=_resolved))")[,2]
caps_name <- toupper(leader_name)
leader_entity_sentiment <- get(paste0(leader_name, '_entity_sentiment')) %>%
pivot_wider(names_from="leader_sentence_dummy",
values_from=c("ave_sentiment",
"sd",
"word_count")) %>%
rename(other_sentiment = ave_sentiment_OTHER,
paste0(leader_name, '_sentiment') = paste0('ave_sentiment_', caps_name))
print(leader_entity_sentiment)
crf <- ggplot(data=leader_entity_sentiment,
aes(x=other_sentiment, y=paste0(leader_name, '_sentiment')))+
geom_point(alpha=0.5))+
geom_abline(intercept=0, slope=1, size=1, color="black")+
geom_smooth(method='lm')+
theme_minimal()
assign(paste0(leader_name, '_corel_fig'), crf, envir = .GlobalEnv)
}
}
#Generating leader-other sentiment correlation plots
batch_corel_figures <- function(ccode_param, leadid_param, facet_param, all_in_one_param) {
files_vect <- files_df %>%
filter(ccode %in% ccode_param | leadid %in% leadid_param) %>%
select(file_name)
#DEFAULT BEHAVIOR (ccode, leadid, facet=FALSE, all_in_one=FALSE)
files_list <- deframe(files_vect)
for (file in files_list) {
leader_name <- str_match(file,"(.*(?=_resolved))")[,2]
caps_name <- toupper(leader_name)
leader_entity_sentiment <- get(paste0(leader_name, '_entity_sentiment')) %>%
pivot_wider(names_from="leader_sentence_dummy",
values_from=c("ave_sentiment",
"sd",
"word_count")) %>%
rename(other_sentiment = ave_sentiment_OTHER,
paste0(leader_name, '_sentiment') = paste0('ave_sentiment_', caps_name))
print(leader_entity_sentiment)
crf <- ggplot(data=leader_entity_sentiment,
aes(x=other_sentiment, y=paste0(leader_name, '_sentiment')))+
geom_point(alpha=0.5)+
geom_abline(intercept=0, slope=1, size=1, color="black")+
geom_smooth(method='lm')+
theme_minimal()
assign(paste0(leader_name, '_corel_fig'), crf, envir = .GlobalEnv)
}
}
#Generating leader-other sentiment correlation plots
batch_corel_figures <- function(ccode_param, leadid_param, facet_param, all_in_one_param) {
files_vect <- files_df %>%
filter(ccode %in% ccode_param | leadid %in% leadid_param) %>%
select(file_name)
#DEFAULT BEHAVIOR (ccode, leadid, facet=FALSE, all_in_one=FALSE)
files_list <- deframe(files_vect)
for (file in files_list) {
leader_name <- str_match(file,"(.*(?=_resolved))")[,2]
caps_name <- toupper(leader_name)
leader_entity_sentiment <- get(paste0(leader_name, '_entity_sentiment')) %>%
pivot_wider(names_from="leader_sentence_dummy",
values_from=c("ave_sentiment",
"sd",
"word_count")) %>%
rename(other_sentiment = ave_sentiment_OTHER,
paste0(leader_name, '_sentiment') = paste0('ave_sentiment_', caps_name))
print(leader_entity_sentiment)
crf <- ggplot(data=leader_entity_sentiment)+
geom_point(aes(x=other_sentiment, y=paste0(leader_name, '_sentiment'))
alpha=0.5)+
geom_abline(intercept=0, slope=1, size=1, color="black")+
geom_smooth(method='lm')+
theme_minimal()
assign(paste0(leader_name, '_corel_fig'), crf, envir = .GlobalEnv)
}
}
#Generating leader-other sentiment correlation plots
batch_corel_figures <- function(ccode_param, leadid_param, facet_param, all_in_one_param) {
files_vect <- files_df %>%
filter(ccode %in% ccode_param | leadid %in% leadid_param) %>%
select(file_name)
#DEFAULT BEHAVIOR (ccode, leadid, facet=FALSE, all_in_one=FALSE)
files_list <- deframe(files_vect)
for (file in files_list) {
leader_name <- str_match(file,"(.*(?=_resolved))")[,2]
caps_name <- toupper(leader_name)
leader_entity_sentiment <- get(paste0(leader_name, '_entity_sentiment')) %>%
pivot_wider(names_from="leader_sentence_dummy",
values_from=c("ave_sentiment",
"sd",
"word_count")) %>%
rename(other_sentiment = ave_sentiment_OTHER,
paste0(leader_name, '_sentiment') = paste0('ave_sentiment_', caps_name))
crf <- ggplot(data=leader_entity_sentiment)+
geom_point(aes(x=other_sentiment, y=paste0(leader_name, '_sentiment')),
alpha=0.5)+
geom_abline(intercept=0, slope=1, size=1, color="black")+
geom_smooth(method='lm')+
theme_minimal()
assign(paste0(leader_name, '_corel_fig'), crf, envir = .GlobalEnv)
}
}
#Generating leader-other sentiment correlation plots
batch_corel_figures <- function(ccode_param, leadid_param, facet_param, all_in_one_param) {
files_vect <- files_df %>%
filter(ccode %in% ccode_param | leadid %in% leadid_param) %>%
select(file_name)
#DEFAULT BEHAVIOR (ccode, leadid, facet=FALSE, all_in_one=FALSE)
files_list <- deframe(files_vect)
for (file in files_list) {
leader_name <- str_match(file,"(.*(?=_resolved))")[,2]
caps_name <- toupper(leader_name)
leader_entity_sentiment <- get(paste0(leader_name, '_entity_sentiment')) %>%
pivot_wider(names_from="leader_sentence_dummy",
values_from=c("ave_sentiment",
"sd",
"word_count")) %>%
rename(other_sentiment = ave_sentiment_OTHER,
paste0(leader_name, '_sentiment') = paste0('ave_sentiment_', caps_name))
crf <- ggplot()+
geom_point(data=leader_entity_sentiment,
aes(x=other_sentiment, y=paste0(leader_name, '_sentiment')),
alpha=0.5)+
geom_abline(intercept=0, slope=1, size=1, color="black")+
geom_smooth(method='lm')+
theme_minimal()
assign(paste0(leader_name, '_corel_fig'), crf, envir = .GlobalEnv)
}
}
#Generating leader-other sentiment correlation plots
batch_corel_figures <- function(ccode_param, leadid_param, facet_param, all_in_one_param) {
files_vect <- files_df %>%
filter(ccode %in% ccode_param | leadid %in% leadid_param) %>%
select(file_name)
#DEFAULT BEHAVIOR (ccode, leadid, facet=FALSE, all_in_one=FALSE)
files_list <- deframe(files_vect)
for (file in files_list) {
leader_name <- str_match(file,"(.*(?=_resolved))")[,2]
caps_name <- toupper(leader_name)
leader_entity_sentiment <- get(paste0(leader_name, '_entity_sentiment')) %>%
pivot_wider(names_from="leader_sentence_dummy",
values_from=c("ave_sentiment",
"sd",
"word_count")) %>%
rename(other_sentiment = ave_sentiment_OTHER,
paste(leader_name, '_sentiment') = paste('ave_sentiment_', caps_name))
crf <- ggplot()+
geom_point(data=leader_entity_sentiment,
aes(x=other_sentiment, y=paste0(leader_name, '_sentiment')),
alpha=0.5)+
geom_abline(intercept=0, slope=1, size=1, color="black")+
geom_smooth(method='lm')+
theme_minimal()
assign(paste0(leader_name, '_corel_fig'), crf, envir = .GlobalEnv)
}
}
#Generating leader-other sentiment correlation plots
batch_corel_figures <- function(ccode_param, leadid_param, facet_param, all_in_one_param) {
files_vect <- files_df %>%
filter(ccode %in% ccode_param | leadid %in% leadid_param) %>%
select(file_name)
#DEFAULT BEHAVIOR (ccode, leadid, facet=FALSE, all_in_one=FALSE)
files_list <- deframe(files_vect)
for (file in files_list) {
leader_name <- str_match(file,"(.*(?=_resolved))")[,2]
caps_name <- toupper(leader_name)
leader_entity_sentiment <- get(paste0(leader_name, '_entity_sentiment')) %>%
pivot_wider(names_from="leader_sentence_dummy",
values_from=c("ave_sentiment",
"sd",
"word_count"))
crf <- ggplot()+
geom_point(data=leader_entity_sentiment,
aes(x=ave_sentiment_OTHER, y=paste0('ave_sentiment_', caps_name)),
alpha=0.5)+
geom_abline(intercept=0, slope=1, size=1, color="black")+
geom_smooth(method='lm')+
theme_minimal()
assign(paste0(leader_name, '_corel_fig'), crf, envir = .GlobalEnv)
}
}
batch_corel_figures(c(230), c(), FALSE, FALSE)
zapatero_corel_fig
#Generating leader-other sentiment correlation plots
batch_corel_figures <- function(ccode_param, leadid_param, facet_param, all_in_one_param) {
files_vect <- files_df %>%
filter(ccode %in% ccode_param | leadid %in% leadid_param) %>%
select(file_name)
#DEFAULT BEHAVIOR (ccode, leadid, facet=FALSE, all_in_one=FALSE)
files_list <- deframe(files_vect)
for (file in files_list) {
leader_name <- str_match(file,"(.*(?=_resolved))")[,2]
caps_name <- toupper(leader_name)
leader_entity_sentiment <- get(paste0(leader_name, '_entity_sentiment')) %>%
pivot_wider(names_from="leader_sentence_dummy",
values_from=c("ave_sentiment",
"sd",
"word_count"))
crf <- ggplot()+
geom_point(data=leader_entity_sentiment,
aes(x=ave_sentiment_OTHER, y=get(paste0('ave_sentiment_', caps_name))),
alpha=0.5)+
geom_abline(intercept=0, slope=1, size=1, color="black")+
geom_smooth(method='lm')+
theme_minimal()
assign(paste0(leader_name, '_corel_fig'), crf, envir = .GlobalEnv)
}
}
batch_corel_figures(c(230), c(), FALSE, FALSE)
zapatero_corel_fig
?geom_abline
#Generating leader-other sentiment correlation plots
batch_corel_figures <- function(ccode_param, leadid_param, facet_param, all_in_one_param) {
files_vect <- files_df %>%
filter(ccode %in% ccode_param | leadid %in% leadid_param) %>%
select(file_name)
#DEFAULT BEHAVIOR (ccode, leadid, facet=FALSE, all_in_one=FALSE)
files_list <- deframe(files_vect)
for (file in files_list) {
leader_name <- str_match(file,"(.*(?=_resolved))")[,2]
caps_name <- toupper(leader_name)
leader_entity_sentiment <- get(paste0(leader_name, '_entity_sentiment')) %>%
pivot_wider(names_from="leader_sentence_dummy",
values_from=c("ave_sentiment",
"sd",
"word_count"))
crf <- ggplot()+
geom_point(data=leader_entity_sentiment,
aes(x=ave_sentiment_OTHER, y=get(paste0('ave_sentiment_', caps_name))),
alpha=0.5)+
geom_abline(intercept=0, slope=1, size=1)+
geom_smooth(method='lm')+
xlim(-1.5,1.5)+
ylim(-1.5,1.5)+
theme_minimal()+
theme(
axis.line.x = element_line(color="black")
axis.line.y = element_line(color="black")
)
assign(paste0(leader_name, '_corel_fig'), crf, envir = .GlobalEnv)
}
}
#Generating leader-other sentiment correlation plots
batch_corel_figures <- function(ccode_param, leadid_param, facet_param, all_in_one_param) {
files_vect <- files_df %>%
filter(ccode %in% ccode_param | leadid %in% leadid_param) %>%
select(file_name)
#DEFAULT BEHAVIOR (ccode, leadid, facet=FALSE, all_in_one=FALSE)
files_list <- deframe(files_vect)
for (file in files_list) {
leader_name <- str_match(file,"(.*(?=_resolved))")[,2]
caps_name <- toupper(leader_name)
leader_entity_sentiment <- get(paste0(leader_name, '_entity_sentiment')) %>%
pivot_wider(names_from="leader_sentence_dummy",
values_from=c("ave_sentiment",
"sd",
"word_count"))
crf <- ggplot()+
geom_point(data=leader_entity_sentiment,
aes(x=ave_sentiment_OTHER, y=get(paste0('ave_sentiment_', caps_name))),
alpha=0.5)+
geom_abline(intercept=0, slope=1, size=1)+
geom_smooth(method='lm')+
xlim(-1.5,1.5)+
ylim(-1.5,1.5)+
theme_minimal()+
theme(
axis.line.x = element_line(color="black"),
axis.line.y = element_line(color="black")
)
assign(paste0(leader_name, '_corel_fig'), crf, envir = .GlobalEnv)
}
}
batch_corel_figures(c(230), c(), FALSE, FALSE)
zapatero_corel_fig
?geom_vline
#Generating leader-other sentiment correlation plots
batch_corel_figures <- function(ccode_param, leadid_param, facet_param, all_in_one_param) {
files_vect <- files_df %>%
filter(ccode %in% ccode_param | leadid %in% leadid_param) %>%
select(file_name)
#DEFAULT BEHAVIOR (ccode, leadid, facet=FALSE, all_in_one=FALSE)
files_list <- deframe(files_vect)
for (file in files_list) {
leader_name <- str_match(file,"(.*(?=_resolved))")[,2]
caps_name <- toupper(leader_name)
leader_entity_sentiment <- get(paste0(leader_name, '_entity_sentiment')) %>%
pivot_wider(names_from="leader_sentence_dummy",
values_from=c("ave_sentiment",
"sd",
"word_count"))
crf <- ggplot()+
geom_point(data=leader_entity_sentiment,
aes(x=ave_sentiment_OTHER, y=get(paste0('ave_sentiment_', caps_name))),
alpha=0.5)+
geom_abline(intercept=0, slope=1, size=1)+
geom_vline(xintercept=0)+
geom_hline(yintercept=0)+
geom_smooth(method='lm')+
xlim(-1.5,1.5)+
ylim(-1.5,1.5)+
theme_minimal()+
theme()
assign(paste0(leader_name, '_corel_fig'), crf, envir = .GlobalEnv)
}
}
batch_corel_figures(c(230), c(), FALSE, FALSE)
zapatero_corel_fig
#Generating leader-other sentiment correlation plots
batch_corel_figures <- function(ccode_param, leadid_param, facet_param, all_in_one_param) {
files_vect <- files_df %>%
filter(ccode %in% ccode_param | leadid %in% leadid_param) %>%
select(file_name)
#DEFAULT BEHAVIOR (ccode, leadid, facet=FALSE, all_in_one=FALSE)
files_list <- deframe(files_vect)
for (file in files_list) {
leader_name <- str_match(file,"(.*(?=_resolved))")[,2]
caps_name <- toupper(leader_name)
leader_entity_sentiment <- get(paste0(leader_name, '_entity_sentiment')) %>%
pivot_wider(names_from="leader_sentence_dummy",
values_from=c("ave_sentiment",
"sd",
"word_count"))
crf <- ggplot()+
geom_point(data=leader_entity_sentiment,
aes(x=ave_sentiment_OTHER, y=get(paste0('ave_sentiment_', caps_name))),
alpha=0.5)+
geom_abline(intercept=0, slope=1, size=1)+
geom_smooth(data=leader_entity_sentiment,
aes(x=ave_sentiment_OTHER, y=get(paste0('ave_sentiment_', caps_name))),
method='lm',
color='red')+
xlim(-1.5,1.5)+
ylim(-1.5,1.5)+
geom_vline(xintercept=0)+
geom_hline(yintercept=0)+
theme_minimal()+
theme()
assign(paste0(leader_name, '_corel_fig'), crf, envir = .GlobalEnv)
}
}
batch_corel_figures(c(230), c(), FALSE, FALSE)
zapatero_corel_fig
#Generating leader-other sentiment correlation plots
batch_corel_figures <- function(ccode_param, leadid_param, facet_param, all_in_one_param) {
files_vect <- files_df %>%
filter(ccode %in% ccode_param | leadid %in% leadid_param) %>%
select(file_name)
#DEFAULT BEHAVIOR (ccode, leadid, facet=FALSE, all_in_one=FALSE)
files_list <- deframe(files_vect)
for (file in files_list) {
leader_name <- str_match(file,"(.*(?=_resolved))")[,2]
caps_name <- toupper(leader_name)
leader_entity_sentiment <- get(paste0(leader_name, '_entity_sentiment')) %>%
pivot_wider(names_from="leader_sentence_dummy",
values_from=c("ave_sentiment",
"sd",
"word_count"))
crf <- ggplot()+
geom_point(data=leader_entity_sentiment,
aes(x=ave_sentiment_OTHER, y=get(paste0('ave_sentiment_', caps_name))),
alpha=0.5)+
geom_abline(intercept=0, slope=1, size=1)+
geom_smooth(data=leader_entity_sentiment,
aes(x=ave_sentiment_OTHER, y=get(paste0('ave_sentiment_', caps_name))),
method='lm',
color='red',
se=FALSE)+
xlim(-1.25,1.25)+
ylim(-1.25,1.25)+
geom_vline(xintercept=0)+
geom_hline(yintercept=0)+
theme_minimal()+
theme()
assign(paste0(leader_name, '_corel_fig'), crf, envir = .GlobalEnv)
}
}
batch_corel_figures(c(230), c(), FALSE, FALSE)
zapatero_corel_fig
cond1 = FALSE,
cond2 = FALSE,
if (!cond1 & !cond2){
print('here1')
}else if (cond1) {
print('here2')
}else if (cond2) {
print('here3')
}
cond1 = FALSE
cond2 = FALSE
if (!cond1 & !cond2){
print('here1')
}else if (cond1) {
print('here2')
}else if (cond2) {
print('here3')
}
cond1 = TRUE
cond2 = FALSE
if (!cond1 & !cond2){
print('here1')
}else if (cond1) {
print('here2')
}else if (cond2) {
print('here3')
}
cond1 = FALSE
cond2 = TRUE
if (!cond1 & !cond2){
print('here1')
}else if (cond1) {
print('here2')
}else if (cond2) {
print('here3')
cond1 = FALSE
cond2 = TRUE
if (!cond1 & !cond2){
print('here1')
}else if (cond1) {
print('here2')
}else if (cond2) {
print('here3')
}
cond1 = FALSE
cond2 = TRUE
if (!cond1 & !cond2){
print('here1')
}else if (cond1) {
print('here2')
}else if (cond2) {
print('here3')
}
cond1 = FALSE
cond2 = TRUE
if (!cond1 & !cond2){
print('here1')
}else if (cond1) {
print('here2')
}else if (cond2) {
print('here3')
}
cond1 = FALSE
cond2 = TRUE
if (!cond1 & !cond2){
print('here1')
}else if (cond1) {
print('here2')
}else if (cond2) {
print('here3')
}
View(aznar_entity_sentiment)
``230_timeline_fig``
