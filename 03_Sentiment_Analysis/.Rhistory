leader_name_only <- str_match(file, "(.*(?=_resolved))")[,2]
caps_name <- toupper(leader_name_only)
leader_entity_sentiment <- get(paste0(leader_name, '_entity_sentiment')) %>%
select(-c(leadid)) %>%
pivot_wider(names_from="leader_sentence_dummy",
values_from=c("ave_sentiment",
"sd",
"word_count")) %>%
rename_with(.fn = ~ 'ave_sentiment_leader', .cols=paste0('ave_sentiment_', caps_name)) %>%
mutate(name = as.factor(caps_name)) %>%
select(article_id, date, ave_sentiment_leader, ave_sentiment_OTHER, name)
x <- rbind(x, leader_entity_sentiment)
}
assign('multi_leader_entity_sentiment', x, envir = .GlobalEnv)
country <- get(paste0(leader_name, '_processed')) %>%
select(country)%>%
unique()%>%
toString()
custom_palette <- palette_generator(multi_leader_entity_sentiment %>%
mutate(leader_sentence_dummy = as.character(name)))
crf_together <-ggplot()+
geom_point(data=multi_leader_entity_sentiment,
aes(x=ave_sentiment_OTHER,
y=ave_sentiment_leader,
color=name),
alpha=0.5)+
geom_abline(intercept = 0, slope=1, size=1)+
xlim(-1.1,1.1)+
ylim(-1.1,1.1)+
geom_vline(xintercept=0)+
geom_hline(yintercept=0)
for (smooth in unique(multi_leader_entity_sentiment$name)) {
temp_leader_entity_sentiment <- multi_leader_entity_sentiment %>%
filter(name==smooth)
print(custom_palette[[1]][match(smooth, custom_palette[[2]])])
crf_together <- crf_together+
geom_smooth(data=temp_leader_entity_sentiment,
aes(x=ave_sentiment_OTHER, y=ave_sentiment_leader),
color=custom_palette[[1]][match(smooth, custom_palette[[2]])],
size=2,
method='lm',
se=FALSE)
}
crf_together <-crf_together+
scale_color_manual(name='LEADERS',
values=unlist(custom_palette[1]), breaks=unlist(custom_palette[2]))+
xlab("Ambient Sentiment")+
ylab("Leader Sentiment")+
ggtitle(paste0("Sentiment Expressed by *The Economist* about leaders of ",
country,
" vs. ambient sentiment expressed in the same article"))+
annotate(geom="text",
label="more positive \u2192",
size=2.25,
x=0.05,
y=-1.05,
hjust=0,
color='#696969',
fontface='italic')+
annotate(geom="text",
label="\u2190 more negative",
size=2.25,
x=-0.05,
y=-1.05,
hjust=1,
color='#696969',
fontface='italic')+
annotate(geom="text",
label="more positive \u2192",
size=2.25,
x=-1.05,
y=0.1,
angle=90,
hjust=0,
color='#696969',
fontface='italic')+
annotate(geom="text",
label="\u2190 more negative",
size=2.25,
x=-1.05,
y=-0.1,
angle=90,
hjust=1,
color='#696969',
fontface='italic')+
theme_minimal()+
theme(plot.title=ggtext::element_markdown())
assign(multi_name, crf_together, envir = .GlobalEnv)
}
}
batch_timeline_figures(c(230))
`230_timeline_fig`
batch_corel_figures(c(350), c(), TRUE, FALSE, '350_corel_facet')
batch_corel_figures(c(350), c(), TRUE, FALSE, '350_corel_facet')
batch_corel_figures(c(350), c(), FALSE, FALSE, '')
batch_corel_figures(c(350), c(), TRUE, FALSE, '350_corel_facet')
batch_corel_figures(c(350), c(), FALSE, TRUE, '350_corel_facet')
batch_corel_figures(c(350), c(), FALSE, TRUE, '350_corel_together')
`350_corel_together`
`350_timeline_fig`
########################################
#Generating national (ccode) leader=-sentiment timeline figures
batch_timeline_figures <- function(ccode_param) {
for (ccode_p in ccode_param) {
files_vect <- files_df %>%
filter(ccode == ccode_p) %>%
select(file_name)
files_list <- deframe(files_vect)
x <- data.frame()
y <- data.frame()
assign(paste0(ccode_p, '_entity_sentiment'), x)
assign(paste0(ccode_p, '_sentence_sentiment'), y)
for (file in files_list) {
leader_name <- paste0(str_match(file,"(.*(?=_resolved))")[,2],
str_match(file, "(?=leadid-(.*)(?=\\_temp.csv))")[,2])
e_1 <- get(paste0(leader_name, '_entity_sentiment'))
s_1 <- get(paste0(leader_name, '_sentence_sentiment'))
##rbind all of these together
assign(paste0(ccode_p, '_entity_sentiment'), rbind(get(paste0(ccode_p, '_entity_sentiment')),
e_1))
assign(paste0(ccode_p, '_sentence_sentiment'), rbind(get(paste0(ccode_p, '_sentence_sentiment')),
s_1))
}
ccode_sentence_sentiment <- get(paste0(ccode_p, '_sentence_sentiment'))
assign(paste0(ccode_p, '_sentence_sentiment'), ccode_sentence_sentiment, envir = .GlobalEnv)
ccode_entity_sentiment <- get(paste0(ccode_p, '_entity_sentiment'))
assign(paste0(ccode_p, '_entity_sentiment'), ccode_entity_sentiment, envir = .GlobalEnv)
custom_palette <- palette_generator(ccode_entity_sentiment)
country <- get(paste0(leader_name, '_processed')) %>%
select(country) %>%
unique() %>%
toString()
print(ccode_entity_sentiment %>%
select(leadid, leader_sentence_dummy) %>%
unique())
tlf <- ggplot()+
geom_jitter(data=ccode_sentence_sentiment,
aes(x=date, y=sentiment, color=leader_sentence_dummy, alpha=alpha_setting),
size=0.1,
width=6)+
geom_smooth(data=ccode_entity_sentiment,
aes(x=date, y=ave_sentiment, color=leader_sentence_dummy, group=leadid),
method="loess",
span=0.5,
size=2,
se=FALSE)+
#geom_line(data=ccode_entity_sentiment,
#            aes(x=date, y=ave_sentiment, color=leader_sentence_dummy, group=leadid),
#            method="loess",
#            size=2,)+
scale_color_manual(guide='none', values=unlist(custom_palette[1]), breaks=unlist(custom_palette[2]))+
scale_alpha_binned(guide='none')+
scale_x_date(limits=as.Date(c(min(ccode_entity_sentiment$date),
max(ccode_entity_sentiment$date) %m+% months(4))),
date_minor_breaks="5 years")+
geom_label_repel(data=ccode_entity_sentiment %>%
group_by(leader_sentence_dummy) %>%
distinct(date, .keep_all=TRUE)%>%
mutate(label_status=ifelse(date==max(date),
leader_sentence_dummy,
NA),
label_status=ifelse(label_status=="OTHER",
"AMBIENT",
label_status)),
aes(x=date, y=ave_sentiment, label=label_status, color=leader_sentence_dummy),
nudge_x=80,
na.rm=TRUE,
arrow=NULL)+
xlab("Date")+
ylab("Sentiment")+
ggtitle(paste0("Sentiment expressed by *The Economist* about leaders of ",
country))+
annotate(geom="text",
x=min(ccode_entity_sentiment$date),
y=1.55,
label="more positive \u2192",
size=1.75,
color="#696969",
angle='90',
fontface='italic',
hjust=0
)+
annotate(geom="text",
x=min(ccode_entity_sentiment$date),
y=-1.55,
label="\u2190 more negative",
size=1.75,
color='#696969',
angle='90',
fontface='italic',
hjust=1
)+
theme_minimal()+
theme(axis.title = element_text(
color="black",
size=12),
plot.title=ggtext::element_markdown())
assign(paste0(ccode_p, '_timeline_fig'), tlf, envir = .GlobalEnv)
}
}
`350_timeline_fig`
######################################
#Generating national (ccode) leader=-sentiment timeline figures
batch_timeline_figures <- function(ccode_param) {
for (ccode_p in ccode_param) {
files_vect <- files_df %>%
filter(ccode == ccode_p) %>%
select(file_name)
files_list <- deframe(files_vect)
x <- data.frame()
y <- data.frame()
assign(paste0(ccode_p, '_entity_sentiment'), x)
assign(paste0(ccode_p, '_sentence_sentiment'), y)
for (file in files_list) {
leader_name <- paste0(str_match(file,"(.*(?=_resolved))")[,2],
str_match(file, "(?=leadid-(.*)(?=\\_temp.csv))")[,2])
e_1 <- get(paste0(leader_name, '_entity_sentiment'))
s_1 <- get(paste0(leader_name, '_sentence_sentiment'))
##rbind all of these together
assign(paste0(ccode_p, '_entity_sentiment'), rbind(get(paste0(ccode_p, '_entity_sentiment')),
e_1))
assign(paste0(ccode_p, '_sentence_sentiment'), rbind(get(paste0(ccode_p, '_sentence_sentiment')),
s_1))
}
ccode_sentence_sentiment <- get(paste0(ccode_p, '_sentence_sentiment'))
assign(paste0(ccode_p, '_sentence_sentiment'), ccode_sentence_sentiment, envir = .GlobalEnv)
ccode_entity_sentiment <- get(paste0(ccode_p, '_entity_sentiment'))
assign(paste0(ccode_p, '_entity_sentiment'), ccode_entity_sentiment, envir = .GlobalEnv)
custom_palette <- palette_generator(ccode_entity_sentiment)
country <- get(paste0(leader_name, '_processed')) %>%
select(country) %>%
unique() %>%
toString()
print(ccode_entity_sentiment %>%
select(leadid, leader_sentence_dummy) %>%
unique())
tlf <- ggplot()+
geom_jitter(data=ccode_sentence_sentiment,
aes(x=date, y=sentiment, color=leader_sentence_dummy, alpha=alpha_setting),
size=0.1,
width=6)+
geom_smooth(data=ccode_entity_sentiment,
aes(x=date, y=ave_sentiment, color=leader_sentence_dummy, group=leadid),
method="loess",
span=1,
size=2,
se=FALSE)+
#geom_line(data=ccode_entity_sentiment,
#            aes(x=date, y=ave_sentiment, color=leader_sentence_dummy, group=leadid),
#            method="loess",
#            size=2,)+
scale_color_manual(guide='none', values=unlist(custom_palette[1]), breaks=unlist(custom_palette[2]))+
scale_alpha_binned(guide='none')+
scale_x_date(limits=as.Date(c(min(ccode_entity_sentiment$date),
max(ccode_entity_sentiment$date) %m+% months(4))),
date_minor_breaks="5 years")+
geom_label_repel(data=ccode_entity_sentiment %>%
group_by(leader_sentence_dummy) %>%
distinct(date, .keep_all=TRUE)%>%
mutate(label_status=ifelse(date==max(date),
leader_sentence_dummy,
NA),
label_status=ifelse(label_status=="OTHER",
"AMBIENT",
label_status)),
aes(x=date, y=ave_sentiment, label=label_status, color=leader_sentence_dummy),
nudge_x=80,
na.rm=TRUE,
arrow=NULL)+
xlab("Date")+
ylab("Sentiment")+
ggtitle(paste0("Sentiment expressed by *The Economist* about leaders of ",
country))+
annotate(geom="text",
x=min(ccode_entity_sentiment$date),
y=1.55,
label="more positive \u2192",
size=1.75,
color="#696969",
angle='90',
fontface='italic',
hjust=0
)+
annotate(geom="text",
x=min(ccode_entity_sentiment$date),
y=-1.55,
label="\u2190 more negative",
size=1.75,
color='#696969',
angle='90',
fontface='italic',
hjust=1
)+
theme_minimal()+
theme(axis.title = element_text(
color="black",
size=12),
plot.title=ggtext::element_markdown())
assign(paste0(ccode_p, '_timeline_fig'), tlf, envir = .GlobalEnv)
}
}
`350_timeline_fig`
batch_timeline_figures(c(350))
`350_timeline_fig`
#Generating national (ccode) leader=-sentiment timeline figures
batch_timeline_figures <- function(ccode_param) {
for (ccode_p in ccode_param) {
files_vect <- files_df %>%
filter(ccode == ccode_p) %>%
select(file_name)
files_list <- deframe(files_vect)
x <- data.frame()
y <- data.frame()
assign(paste0(ccode_p, '_entity_sentiment'), x)
assign(paste0(ccode_p, '_sentence_sentiment'), y)
for (file in files_list) {
leader_name <- paste0(str_match(file,"(.*(?=_resolved))")[,2],
str_match(file, "(?=leadid-(.*)(?=\\_temp.csv))")[,2])
e_1 <- get(paste0(leader_name, '_entity_sentiment'))
s_1 <- get(paste0(leader_name, '_sentence_sentiment'))
##rbind all of these together
assign(paste0(ccode_p, '_entity_sentiment'), rbind(get(paste0(ccode_p, '_entity_sentiment')),
e_1))
assign(paste0(ccode_p, '_sentence_sentiment'), rbind(get(paste0(ccode_p, '_sentence_sentiment')),
s_1))
}
ccode_sentence_sentiment <- get(paste0(ccode_p, '_sentence_sentiment'))
assign(paste0(ccode_p, '_sentence_sentiment'), ccode_sentence_sentiment, envir = .GlobalEnv)
ccode_entity_sentiment <- get(paste0(ccode_p, '_entity_sentiment'))
assign(paste0(ccode_p, '_entity_sentiment'), ccode_entity_sentiment, envir = .GlobalEnv)
custom_palette <- palette_generator(ccode_entity_sentiment)
country <- get(paste0(leader_name, '_processed')) %>%
select(country) %>%
unique() %>%
toString()
print(ccode_entity_sentiment %>%
select(leadid, leader_sentence_dummy) %>%
unique())
tlf <- ggplot()+
geom_jitter(data=ccode_sentence_sentiment,
aes(x=date, y=sentiment, color=leader_sentence_dummy, alpha=alpha_setting),
size=0.1,
width=6)+
geom_smooth(data=ccode_entity_sentiment,
aes(x=date, y=ave_sentiment, color=leader_sentence_dummy, group=leadid),
method="loess",
span=0.8,
size=2,
se=FALSE)+
#geom_line(data=ccode_entity_sentiment,
#            aes(x=date, y=ave_sentiment, color=leader_sentence_dummy, group=leadid),
#            method="loess",
#            size=2,)+
scale_color_manual(guide='none', values=unlist(custom_palette[1]), breaks=unlist(custom_palette[2]))+
scale_alpha_binned(guide='none')+
scale_x_date(limits=as.Date(c(min(ccode_entity_sentiment$date),
max(ccode_entity_sentiment$date) %m+% months(4))),
date_minor_breaks="5 years")+
geom_label_repel(data=ccode_entity_sentiment %>%
group_by(leader_sentence_dummy) %>%
distinct(date, .keep_all=TRUE)%>%
mutate(label_status=ifelse(date==max(date),
leader_sentence_dummy,
NA),
label_status=ifelse(label_status=="OTHER",
"AMBIENT",
label_status)),
aes(x=date, y=ave_sentiment, label=label_status, color=leader_sentence_dummy),
nudge_x=80,
na.rm=TRUE,
arrow=NULL)+
xlab("Date")+
ylab("Sentiment")+
ggtitle(paste0("Sentiment expressed by *The Economist* about leaders of ",
country))+
annotate(geom="text",
x=min(ccode_entity_sentiment$date),
y=1.55,
label="more positive \u2192",
size=1.75,
color="#696969",
angle='90',
fontface='italic',
hjust=0
)+
annotate(geom="text",
x=min(ccode_entity_sentiment$date),
y=-1.55,
label="\u2190 more negative",
size=1.75,
color='#696969',
angle='90',
fontface='italic',
hjust=1
)+
theme_minimal()+
theme(axis.title = element_text(
color="black",
size=12),
plot.title=ggtext::element_markdown())
assign(paste0(ccode_p, '_timeline_fig'), tlf, envir = .GlobalEnv)
}
}
batch_timeline_figurse(c(350))
`350_timeline_fig`
#######################################
#Generating national (ccode) leader=-sentiment timeline figures
batch_timeline_figures <- function(ccode_param) {
for (ccode_p in ccode_param) {
files_vect <- files_df %>%
filter(ccode == ccode_p) %>%
select(file_name)
files_list <- deframe(files_vect)
x <- data.frame()
y <- data.frame()
assign(paste0(ccode_p, '_entity_sentiment'), x)
assign(paste0(ccode_p, '_sentence_sentiment'), y)
for (file in files_list) {
leader_name <- paste0(str_match(file,"(.*(?=_resolved))")[,2],
str_match(file, "(?=leadid-(.*)(?=\\_temp.csv))")[,2])
e_1 <- get(paste0(leader_name, '_entity_sentiment'))
s_1 <- get(paste0(leader_name, '_sentence_sentiment'))
##rbind all of these together
assign(paste0(ccode_p, '_entity_sentiment'), rbind(get(paste0(ccode_p, '_entity_sentiment')),
e_1))
assign(paste0(ccode_p, '_sentence_sentiment'), rbind(get(paste0(ccode_p, '_sentence_sentiment')),
s_1))
}
ccode_sentence_sentiment <- get(paste0(ccode_p, '_sentence_sentiment'))
assign(paste0(ccode_p, '_sentence_sentiment'), ccode_sentence_sentiment, envir = .GlobalEnv)
ccode_entity_sentiment <- get(paste0(ccode_p, '_entity_sentiment'))
assign(paste0(ccode_p, '_entity_sentiment'), ccode_entity_sentiment, envir = .GlobalEnv)
custom_palette <- palette_generator(ccode_entity_sentiment)
country <- get(paste0(leader_name, '_processed')) %>%
select(country) %>%
unique() %>%
toString()
print(ccode_entity_sentiment %>%
select(leadid, leader_sentence_dummy) %>%
unique())
tlf <- ggplot()+
geom_jitter(data=ccode_sentence_sentiment,
aes(x=date, y=sentiment, color=leader_sentence_dummy, alpha=alpha_setting),
size=0.1,
width=6)+
geom_smooth(data=ccode_entity_sentiment,
aes(x=date, y=ave_sentiment, color=leader_sentence_dummy, group=leadid),
method="loess",
span=0.5,
size=2,
se=FALSE)+
#geom_line(data=ccode_entity_sentiment,
#            aes(x=date, y=ave_sentiment, color=leader_sentence_dummy, group=leadid),
#            method="loess",
#            size=2,)+
scale_color_manual(guide='none', values=unlist(custom_palette[1]), breaks=unlist(custom_palette[2]))+
scale_alpha_binned(guide='none')+
scale_x_date(limits=as.Date(c(min(ccode_entity_sentiment$date),
max(ccode_entity_sentiment$date) %m+% months(4))),
date_minor_breaks="5 years")+
geom_label_repel(data=ccode_entity_sentiment %>%
group_by(leader_sentence_dummy) %>%
distinct(date, .keep_all=TRUE)%>%
mutate(label_status=ifelse(date==max(date),
leader_sentence_dummy,
NA),
label_status=ifelse(label_status=="OTHER",
"AMBIENT",
label_status)),
aes(x=date, y=ave_sentiment, label=label_status, color=leader_sentence_dummy),
nudge_x=80,
na.rm=TRUE,
arrow=NULL)+
xlab("Date")+
ylab("Sentiment")+
ggtitle(paste0("Sentiment expressed by *The Economist* about leaders of ",
country))+
annotate(geom="text",
x=min(ccode_entity_sentiment$date),
y=1.55,
label="more positive \u2192",
size=1.75,
color="#696969",
angle='90',
fontface='italic',
hjust=0
)+
annotate(geom="text",
x=min(ccode_entity_sentiment$date),
y=-1.55,
label="\u2190 more negative",
size=1.75,
color='#696969',
angle='90',
fontface='italic',
hjust=1
)+
theme_minimal()+
theme(axis.title = element_text(
color="black",
size=12),
plot.title=ggtext::element_markdown())
assign(paste0(ccode_p, '_timeline_fig'), tlf, envir = .GlobalEnv)
}
}
batch_timeline_figurse(c(350))
`350_timeline_fig`
batch_corel_figures(c(350), c(), FALSE, FALSE, '')
batch_corel_figures(c(350), c(), TRUE, FALSE, '350_corel_facet')
`350_corel_facet`
batch_corel_figures(c(350), c(), FALSE, TRUE, '350_corel_together')
`350_corel_together`
