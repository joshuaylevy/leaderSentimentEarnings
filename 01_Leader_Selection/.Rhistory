}
#clearing out template of reference coordinates dataframe
allXYCoords <- subset(allXYCoords, DISTRICTID!="abc")
#creating the blank neighborhood status dataframe
neighborStatus <- cdno %>%
select(DISTRICTID)
neighborStatus$DISTRICTID <- as.character(neighborStatus$DISTRICTID)
st_geometry(neighborStatus) <- NULL
neighborStatus$neighbors <- list(c("a", "b"))
#identifying neighbor districts and entering them into the above blank template as vectors of District IDs
for (district in neighborStatus$DISTRICTID){
print(district)
interestedCoords <- allXYCoords %>%
filter(DISTRICTID == district)
#finding all matches by merging
matchingCoords <- left_join(interestedCoords, allXYCoords, by="XY", suffix=c(as.character(district), "Ref"))
matchingCoords$DISTRICTIDRef <- as.character(matchingCoords$DISTRICTIDRef)
#identifying unique matches
neighborsVec <- rep("", length(unique(matchingCoords$DISTRICTIDRef)))
for (i in 1:as.numeric(length(unique(matchingCoords$DISTRICTIDRef)))){
neighborsVec[i] <- unique(matchingCoords$DISTRICTIDRef)[i]
}
#entering the unique matches into the higher neighborStatus data frame as a vector
neighborsVec <- neighborsVec[neighborsVec != as.character(district)]
neighborStatus[neighborStatus$DISTRICTID==district, "neighbors"][[1]] <- list(neighborsVec)
print(neighborStatus[neighborStatus$DISTRICTID==district, "neighbors"])
}
View(neighborStatus)
neighborStatus$congNumb <- 106
neighborStatus$DISTRICTID[1]
length(neighbor)
length(neighborStatus$neighbor[1])
neighborStatus#neighbor
neighborStatus#neighbor[1]
neighborStatus$neighbor[1]
length(neighborStatus$neghbor[[1]])
length(neighborStatus$neghbor[[2]])
length(neighborStatus$neighbor[[1]])
length(neighborStatus$neighbor[2][[1]])
neighborStatus$neighbor[2]
matchingCoords$DISTRICTIDRef <- as.character(matchingCoords$DISTRICTIDRef)
library(tidyverse)
library(ggmap)
library(sf)
library(compare)
get_congress_map <- function(cong){
temp_file <- tempfile()
temp_dir <- tempdir()
print(temp_dir)
zp <- sprintf("http://cdmaps.polisci.ucla.edu/shp/districts%03i.zip",cong)
download.file(zp,temp_file)
unzip(zipfile=temp_file,exdir=temp_dir)
fpath <- paste(temp_dir, sprintf("districtShapes/districts%03i.shp",cong), sep = "/")
st_read(fpath)
}
#Creating a df to join in all the state abreviations for the purpose of creating unqiue district IDs of the form CA-1
stateAbrevs <- data.frame(STATENAME = c("Alabama", "Alaska", "Arizona", "Arkansas", "California", "Colorado", "Connecticut","Delaware","District of Columbia", "Florida","Georgia", "Hawaii", "Idaho", "Illinois","Indiana","Iowa","Kansas","Kentucky","Louisiana","Maine","Maryland","Massachusetts","Michigan","Minnesota","Mississippi","Missouri","Montana","Nebraska","Nevada","New Hampshire","New Jersey","New Mexico","New York","North Carolina","North Dakota","Ohio","Oklahoma","Oregon","Pennsylvania","Rhode Island","South Carolina","South Dakota","Tennessee","Texas","Utah","Vermont","Virginia","Washington","West Virginia","Wisconsin","Wyoming"),
STATEABREV= c("AL","AK","AZ","AR","CA","CO","CT","DE","DC","FL", "GA","HI","ID","IL","IN","IA","KS","KY","LA","ME","MD","MA","MI","MN","MS","MO","MT","NE","NV","NH","NJ","NM","NY","NC","ND","OH","OK","OR","PA","RI","SC","SD","TN","TX","UT","VT","VA","WA","WV","WI","WY"))
#Modify this vector to run this script on various sittings of Congress
congVector <- c(106,107,108,109)
TESTCASE <- get_congress_map(106)
for (congress in congVector){
#pulling ____th congressional pologyonal data
cdno <- get_congress_map(congress)
#Generating unique distric IDs - must be done for every Congress when considering redistricting (note that some states - those with only a single district- have AK-0 rather than AK-1)
#note that this process also removes county data - we can maybe reinclude this later
cdno <- cdno %>% left_join(stateAbrevs, by="STATENAME")
cdno$DISTRICT <- as.character(cdno$DISTRICT)
cdno$DISTRICTID <- paste(cdno$STATEABREV, cdno$DISTRICT, sep="-")
cdno$INTERESTED <- 0
#Drop DC-1
cdno <- subset(cdno, DISTRICT!=98)
#paring down the number of variables for computationl efficiency
cdno <- cdno %>% select(c(DISTRICTID, geometry, INTERESTED))
#create a blank data frame that will then be added to in the following loop. At the end of the loop we will have a single, tall, dataset with every coordinate (and associated district), against which we can check for neighborhood status
allXYCoords <- data.frame(DISTRICTID="abc", XY=0)
#generating the reference coordinates data frame
for (district in cdno$DISTRICTID){
cdno$INTERESTED <- 0
print(paste("We are currently finding neighbors for: ", district))
#identifying the coordinates for the district of interest
cdno[cdno$DISTRICTID == district, "INTERESTED"] <-1
highlightCoords <- cdno %>%
filter(INTERESTED==1) %>%
select(geometry) %>%
st_coordinates() %>%
as.data.frame() %>%
select(c(X,Y))
highlightCoords$XY <- paste(highlightCoords$X, highlightCoords$Y)
highlightCoords$DISTRICTID <- district
highlightCoords <- subset(highlightCoords, select=c(DISTRICTID,XY))
allXYCoords <- rbind(allXYCoords, highlightCoords)
}
#clearing out template of reference coordinates dataframe
allXYCoords <- subset(allXYCoords, DISTRICTID!="abc")
#creating the blank neighborhood status dataframe
neighborStatus <- cdno %>%
select(DISTRICTID)
neighborStatus$DISTRICTID <- as.character(neighborStatus$DISTRICTID)
st_geometry(neighborStatus) <- NULL
neighborStatus$neighbors <- list(c("a", "b"))
#identifying neighbor districts and entering them into the above blank template as vectors of District IDs
for (district in neighborStatus$DISTRICTID){
print(district)
interestedCoords <- allXYCoords %>%
filter(DISTRICTID == district)
#finding all matches by merging
matchingCoords <- left_join(interestedCoords, allXYCoords, by="XY", suffix=c(as.character(district), "Ref"))
matchingCoords$DISTRICTIDRef <- as.character(matchingCoords$DISTRICTIDRef)
#identifying unique matches
neighborsVec <- rep("", length(unique(matchingCoords$DISTRICTIDRef)))
for (i in 1:as.numeric(length(unique(matchingCoords$DISTRICTIDRef)))){
neighborsVec[i] <- unique(matchingCoords$DISTRICTIDRef)[i]
}
#entering the unique matches into the higher neighborStatus data frame as a vector
neighborsVec <- neighborsVec[neighborsVec != as.character(district)]
neighborStatus[neighborStatus$DISTRICTID==district, "neighbors"][[1]] <- list(neighborsVec)
print(neighborStatus[neighborStatus$DISTRICTID==district, "neighbors"])
}
#create the variable that counts the number of neighbors
neighborStatus$neighborCount <- length(neighborStatus$neighbor[[1]])
neighborStatus$congNumb <- congress
#name the dataset
assign(paste(houseneighbors, congress, sep="_"), neighborStatus)
}
# (j(p1,p2,p3))
input <- c(c(4,2,1),
c(3,6,2),
c(7,2,3),
c(1,5,8))
# (j(p1,p2,p3))
input <- c(c(4,2,1),
c(3,6,2),
c(7,2,3),
c(1,5,8))
sum(input)
t <- t+1
t <- 0
`%notin%` <- negate(%in%)
# (j(p1,p2,p3))
input <- c(c(4,2,1),
c(3,6,2),
c(7,2,3),
c(1,5,8))
# (m(j,j,j)) (this eventually should be replaced by solution)
order <- (c(1,2,3,4),
c(1,2,3,4),
c(1,2,3,4)
)
function(input, order){
t <- 0
for sum(input) != 0 {
t <- t+1
print(t)
}
}
print(sum(input))
function(input, order){
t <- 0
print(sum(input))
for sum(input) != 0 {
t <- t+1
print(t)
}
}
# (j(p1,p2,p3))
input <- c(c(4,2,1),
c(3,6,2),
c(7,2,3),
c(1,5,8))
# (m(j,j,j)) (this eventually should be replaced by solution)
order <- (c(1,2,3,4),
c(1,2,3,4),
c(1,2,3,4)
)
function(input, order){
t <- 0
print(sum(input))
for sum(input) != 0 {
t <- t+1
print(t)
}
library(tidyverse)
library(readxl)
library(lubridate)
# SET PATH: CHANGE AS APPROPRIATE FOR YOUR PATH
setwd("~/Work/UChicago/Leader-Sentiment-Earnings/01 Leader Selection")
#Reading in raw data
polity_5 <- read_excel('p5v2018.xls')
reign_leaders <- read_csv('reign_leaders.csv')
#Basic time/democracy filtering to pare down the size of the datasets
polity_5_democ <- polity_5 %>%
filter(polity > 8, year >1991)
reign_leaders_era <-reign_leaders %>%
filter(syear >=1992) %>%
mutate(eyear = ifelse(is.na(eyear), year(today()), eyear),
emonth = ifelse(is.na(emonth), month(today()), emonth))%>%
rename(start_date = sdate,
start_month = smonth,
start_year = syear,
end_month = emonth,
end_year = eyear) %>%
select(-c("X15", "X16"))
leaders_longified <- reign_leaders_era %>%
group_by(rn = row_number()) %>%
mutate(year = list(start_year:end_year)) %>%
unnest() %>%
ungroup()
countries <- polity_5_democ %>%
select(country, ccode) %>%
distinct()
leaders <- match_test %>%
select(leadid) %>%
distinct()
match_test <- leaders_longified %>%
inner_join(polity_5_democ, by=c('year', 'ccode'))
match_test <- leaders_longified %>%
inner_join(polity_5_democ, by=c('year', 'ccode'))
leaders <- match_test %>%
select(leadid) %>%
distinct()
leaders <- leaders_longified %>%
select(leader) %>%
distinct()
View(leaders)
leaders <- leaders_longified %>%
select(leader, stateabb) %>%
distinct()
write.csv(leaders, 'leaders_names_pre_styling.csv')
help(write.csv)
write.csv(leaders, 'leaders_names_pre_styling.csv', row.names=FALSE)
write.csv(leaders, 'leaders_names_pre_styling.csv', row.names=FALSE)
eaders <- leaders_longified %>%
select(leader, stateabb, ccode) %>%
distinct()
write.csv(leaders, 'leaders_names_pre_styling.csv', row.names=FALSE)
leaders <- leaders_longified %>%
select(leader, stateabb, ccode) %>%
distinct()
write.csv(leaders, 'leaders_names_pre_styling.csv', row.names=FALSE)
View(leaders_longified)
View(polity_5_democ)
leaders <- polity_5_democ %>%
select(leader, stateabb, ccode) %>%
distinct()
write.csv(leaders, 'leaders_names_pre_styling.csv', row.names=FALSE)
leaders <- match_test %>%
select(leader, stateabb, ccode) %>%
distinct()
write.csv(leaders, 'leaders_names_pre_styling.csv', row.names=FALSE)
View(leaders)
View(match_test)
View(polity_5)
polity_5 <- read_excel('p5v2018.xls')
warnings()
polity_5_democ <- polity_5 %>%
filter(polity > 8, year >1991)
View(polity_5_democ)
View(polity_5)
polity_5_democ <- polity_5 %>%
filter(polity >= 8, year >1991)
polity_5_democ_7 <- polity_5 %>%
filter(polity >=7, year > 1991)
polity_5_democ_8 <- polity_5 %>%
filter(polity >= 8, year >1991)
countries_7_but_not_8 <- polity_5_democ_7 %>%
setdiff(polity_5_democ_8) %>%
select(country, year)
View(countries_7_but_not_8)
tester <- leaders_longified %>%
inner_join(polity_5_democ_7, by=c('year', 'ccode')) %>%
group_by(ccode) %>%
filter(count(polity>=8)> 5)
count(polity>=8)>5
tester <- leaders_longified %>%
inner_join(polity_5_democ_7, by=c('year', 'ccode')) %>%
group_by(ccode) %>%
filter(count(polity>=8)>5)
library(tidyverse)
library(readxl)
library(lubridate)
# SET PATH: CHANGE AS APPROPRIATE FOR YOUR PATH
setwd("~/Work/UChicago/Leader-Sentiment-Earnings/01 Leader Selection")
#Reading in raw data
polity_5 <- read_excel('p5v2018.xls')
reign_leaders <- read_csv('reign_leaders.csv')
#Basic time/democracy filtering to pare down the size of the datasets
polity_5_democ_8 <- polity_5 %>%
filter(polity >= 8, year >1991)
polity_5_democ_7 <- polity_5 %>%
filter(polity >=7, year > 1991)
countries_7_but_not_8 <- polity_5_democ_7 %>%
setdiff(polity_5_democ_8) %>%
select(country, year)
reign_leaders_era <-reign_leaders %>%
filter(syear >=1992) %>%
mutate(eyear = ifelse(is.na(eyear), year(today()), eyear),
emonth = ifelse(is.na(emonth), month(today()), emonth))%>%
rename(start_date = sdate,
start_month = smonth,
start_year = syear,
end_month = emonth,
end_year = eyear) %>%
select(-c("X15", "X16"))
leaders_longified <- reign_leaders_era %>%
group_by(rn = row_number()) %>%
mutate(year = list(start_year:end_year)) %>%
unnest() %>%
ungroup()
countries <- polity_5_democ_7 %>%
select(country, ccode) %>%
distinct()
match_test <- leaders_longified %>%
inner_join(polity_5_democ, by=c('year', 'ccode'))
tester <- leaders_longified %>%
inner_join(polity_5_democ_7, by=c('year', 'ccode')) %>%
group_by(ccode) %>%
filter(count(polity>=8)>5) %>%
ungroup()
leaders <- tester %>%
select(leader, stateabb, ccode) %>%
distinct()
#write.csv(leaders, 'leaders_names_pre_styling.csv', row.names=FALSE)
tester <- leaders_longified %>%
inner_join(polity_5_democ_7, by=c('year', 'ccode')) %>%
group_by(ccode) %>%
filter((count(polity>=8)>5)) %>%
ungroup()
tester <- leaders_longified %>%
inner_join(polity_5_democ_7, by=c('year', 'ccode')) %>%
group_by(ccode) %>%
mutate(p_years_above_8 = count(polity>=8)) %>%
filter(p_years_above_8>5) %>%
ungroup()
print(polity_5_democ_7 %>% count(polity>=8))
?n()
?nrow()
tester <- leaders_longified %>%
inner_join(polity_5_democ_7, by=c('year', 'ccode')) %>%
group_by(ccode) %>%
mutate(p_years_above_8 = nrow(polity>=8)) %>%
filter(p_years_above_8>5) %>%
ungroup()
tester <- leaders_longified %>%
inner_join(polity_5_democ_7, by=c('year', 'ccode')) %>%
group_by(ccode) %>%
mutate(p_years_above_8 = nrow(polity>=8))
View(tester)
View(tester)
tester <- leaders_longified %>%
inner_join(polity_5_democ_7, by=c('year', 'ccode')) %>%
group_by(ccode) %>%
mutate(p_years_above_8 = nrow(polity>=8))
View(tester)
view(tester %>% select(country, leader, p_years_above_8))
view(tester)
tester <- leaders_longified %>%
inner_join(polity_5_democ_7, by=c('year', 'ccode')) %>%
group_by(ccode) %>%
mutate(p_years_above_8 = nrow(polity>=8)) %>%
ungroup()%>%
select(year, country, leader p_years_above_8)
tester <- leaders_longified %>%
inner_join(polity_5_democ_7, by=c('year', 'ccode')) %>%
group_by(ccode) %>%
mutate(p_years_above_8 = nrow(polity>=8)) %>%
ungroup() %>%
select(year, country, leader, p_years_above_8)
tester <- leaders_longified %>%
inner_join(polity_5_democ_7, by=c('year', 'ccode')) %>%
group_by(ccode) %>%
mutate(p_years_above_8 = count(polity>=8)) %>%
ungroup() %>%
select(year, country, leader, p_years_above_8)
tester <- leaders_longified %>%
inner_join(polity_5_democ_7, by=c('year', 'ccode')) %>%
group_by(ccode) %>%
mutate(p_years_above_8 = count([polity>=8])) %>%
ungroup() %>%
select(year, country, leader, p_years_above_8)
tester <- leaders_longified %>%
inner_join(polity_5_democ_7, by=c('year', 'ccode')) %>%
group_by(ccode) %>%
mutate(p_years_above_8 = n(polity>=8)) %>%
ungroup() %>%
select(year, country, leader, p_years_above_8)
tester <- leaders_longified %>%
inner_join(polity_5_democ_7, by=c('year', 'ccode')) %>%
group_by(ccode) %>%
mutate(p_years_above_8 = nrow(polity>=8)) %>%
ungroup() %>%
select(year, country, leader, p_years_above_8)
tester <- leaders_longified %>%
inner_join(polity_5_democ_7, by=c('year', 'ccode')) %>%
group_by(ccode) %>%
mutate(above_p8 = ifelse(polity>=8, 1,0)) %>%
mutate(years_above_p8 = sum(above_p8))%>%
ungroup() %>%
select(year, country, leader, p_years_above_8)
tester <- leaders_longified %>%
inner_join(polity_5_democ_7, by=c('year', 'ccode')) %>%
group_by(ccode) %>%
mutate(above_p8 = ifelse(polity>=8, 1,0)) %>%
mutate(years_above_p8 = sum(above_p8))%>%
ungroup() %>%
select(year, country, leader, years_above_p8)
View(tester)
tester <- leaders_longified %>%
inner_join(polity_5_democ_7, by=c('year', 'ccode')) %>%
group_by(ccode) %>%
mutate(above_p8 = ifelse(polity>=8, 1,0)) %>%
mutate(years_above_p8 = sum(above_p8))%>%
ungroup() %>%
filter(years_above_p8 > 5)
View(tester)
?order()
?sort()
tester <- leaders_longified %>%
inner_join(polity_5_democ_7, by=c('year', 'ccode')) %>%
group_by(ccode) %>%
mutate(above_p8 = ifelse(polity>=8, 1,0)) %>%
mutate(years_above_p8 = sum(above_p8))%>%
ungroup() %>%
filter(years_above_p8 > 5) %>%
relocate(stateabb, ccode, leader, start_date, start_month, start_year, end_month_end_year, gender, polity, polity2)
tester <- leaders_longified %>%
inner_join(polity_5_democ_7, by=c('year', 'ccode')) %>%
group_by(ccode) %>%
mutate(above_p8 = ifelse(polity>=8, 1,0)) %>%
mutate(years_above_p8 = sum(above_p8))%>%
ungroup() %>%
filter(years_above_p8 > 5) %>%
relocate(stateabb, ccode, leader, start_date, start_month, start_year, end_month,_end_year, gender, polity, polity2)
tester <- leaders_longified %>%
inner_join(polity_5_democ_7, by=c('year', 'ccode')) %>%
group_by(ccode) %>%
mutate(above_p8 = ifelse(polity>=8, 1,0)) %>%
mutate(years_above_p8 = sum(above_p8))%>%
ungroup() %>%
filter(years_above_p8 > 5) %>%
relocate(stateabb, ccode, leader, start_date, start_month, start_year, end_month,end_year, gender, polity, polity2)
tester <- leaders_longified %>%
inner_join(polity_5_democ_7, by=c('year', 'ccode')) %>%
group_by(ccode) %>%
mutate(above_p8 = ifelse(polity>=8, 1,0)) %>%
mutate(years_above_p8 = sum(above_p8))%>%
ungroup() %>%
filter(years_above_p8 > 5) %>%
relocate(stateabb, ccode, leader, start_date, start_month, start_year, end_month,end_year, gender, polity, polity2, years_above_p8)
matched <- leaders_longified %>%
inner_join(polity_5_democ_7, by=c('year', 'ccode')) %>%
group_by(ccode) %>%
mutate(above_p8 = ifelse(polity>=8, 1,0)) %>%
mutate(years_above_p8 = sum(above_p8))%>%
ungroup() %>%
filter(years_above_p8 > 5) %>%
relocate(stateabb, ccode, leader, start_date, start_month, start_year, end_month,end_year, gender, polity, polity2, years_above_p8)
View(matched)
library(tidyverse)
library(readxl)
library(lubridate)
# SET PATH: CHANGE AS APPROPRIATE FOR YOUR PATH
setwd("~/Work/UChicago/Leader-Sentiment-Earnings/01 Leader Selection")
#Reading in raw data
polity_5 <- read_excel('p5v2018.xls')
reign_leaders <- read_csv('reign_leaders.csv')
#Basic time/democracy filtering to pare down the size of the datasets
polity_5_democ_8 <- polity_5 %>%
filter(polity >= 8, year >1991)
polity_5_democ_7 <- polity_5 %>%
filter(polity >=7, year > 1991)
countries_7_but_not_8 <- polity_5_democ_7 %>%
setdiff(polity_5_democ_8) %>%
select(country, year)
reign_leaders_era <-reign_leaders %>%
filter(syear >=1992) %>%
mutate(eyear = ifelse(is.na(eyear), year(today()), eyear),
emonth = ifelse(is.na(emonth), month(today()), emonth))%>%
rename(start_date = sdate,
start_month = smonth,
start_year = syear,
end_month = emonth,
end_year = eyear) %>%
select(-c("X15", "X16"))
leaders_longified <- reign_leaders_era %>%
group_by(rn = row_number()) %>%
mutate(year = list(start_year:end_year)) %>%
unnest() %>%
ungroup()
matched <- leaders_longified %>%
inner_join(polity_5_democ_7, by=c('year', 'ccode')) %>%
group_by(ccode) %>%
mutate(above_p8 = ifelse(polity>=8, 1,0)) %>%
mutate(years_above_p8 = sum(above_p8))%>%
ungroup() %>%
filter(years_above_p8 > 10) %>%
relocate(stateabb, ccode, leader, start_date, start_month, start_year, end_month,end_year, gender, polity, polity2, years_above_p8)
countries <- matched %>%
select(country, ccode) %>%
distinct()
write.csv(countries, "countries_pre_details.csv", row.names=FALSE)
leaders <- matched %>%
select(leader, leadid, stateabb, ccode) %>%
distinct()
write.csv(leaders, 'leaders_names_pre_styling.csv', row.names=FALSE)
View(countries)
View(polity_5)
View(polity_5_democ_7)
View(polity_5_democ_7)
View(countries)
View(leaders_longified)
View(leaders_longified)
